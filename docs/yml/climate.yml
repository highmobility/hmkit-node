title: Climate
content:
    -
        title: 'getState([, propertyNames])'
        id: getState
        children:
            -
                declaration: "```javascript\nhmkit.commands.Climate.getState()\n```"
                parameters:
                    propertyNames: '(optional) Array of names of the properties you want returned.'
                returns: ClimateResponse
                example: "```javascript\nhmkit.telematics.sendCommand(\n  hmkit.commands.Climate.getState(),\n  accessCertificate\n);\n```"
            -
                id: ClimateResponse
                title: ClimateResponse
                parameters:
                    insideTemperature:
                        data.value: '(Number) (temperature) The inside temperature'
                        timestamp: (Date)
                    outsideTemperature:
                        data.value: '(Number) (temperature) The outside temperature'
                        timestamp: (Date)
                    driverTemperatureSetting:
                        data.value: '(Number) (temperature) The driver temperature setting'
                        timestamp: (Date)
                    passengerTemperatureSetting:
                        data.value: '(Number) (temperature) The passenger temperature setting'
                        timestamp: (Date)
                    hvacState:
                        data.value: '(String) (enum) '
                        timestamp: (Date)
                    defoggingState:
                        data.value: '(String) (enum) '
                        timestamp: (Date)
                    defrostingState:
                        data.value: '(String) (enum) '
                        timestamp: (Date)
                    ionisingState:
                        data.value: '(String) (enum) '
                        timestamp: (Date)
                    defrostingTemperatureSetting:
                        data.value: '(Number) (temperature) The defrosting temperature setting'
                        timestamp: (Date)
                    hvacWeekdayStartingTimes:
                        data.value: '(Array<Object>) '
                        timestamp: (Date)
                    rearTemperatureSetting:
                        data.value: '(Number) (temperature) The rear temperature'
                        timestamp: (Date)
                example: "```json\n{\n  \"insideTemperature\": {\n    \"timestamp\": \"2020-12-21T15:48:04.887Z\",\n    \"data\": {\n      \"value\": {\n        \"celsius\": 19.1\n      }\n    }\n  },\n  \"outsideTemperature\": {\n    \"timestamp\": \"2020-12-21T15:48:04.887Z\",\n    \"data\": {\n      \"value\": {\n        \"celsius\": 12.2\n      }\n    }\n  },\n  \"driverTemperatureSetting\": {\n    \"timestamp\": \"2020-12-21T15:48:04.887Z\",\n    \"data\": {\n      \"value\": {\n        \"celsius\": 21.5\n      }\n    }\n  },\n  \"passengerTemperatureSetting\": {\n    \"timestamp\": \"2020-12-21T15:48:04.887Z\",\n    \"data\": {\n      \"value\": {\n        \"celsius\": 21.7\n      }\n    }\n  },\n  \"hvacState\": {\n    \"timestamp\": \"2020-12-21T15:48:04.887Z\",\n    \"data\": {\n      \"value\": \"active\"\n    }\n  },\n  \"defoggingState\": {\n    \"timestamp\": \"2020-12-21T15:48:04.887Z\",\n    \"data\": {\n      \"value\": \"inactive\"\n    }\n  },\n  \"defrostingState\": {\n    \"timestamp\": \"2020-12-21T15:48:04.887Z\",\n    \"data\": {\n      \"value\": \"inactive\"\n    }\n  },\n  \"ionisingState\": {\n    \"timestamp\": \"2020-12-21T15:48:04.887Z\",\n    \"data\": {\n      \"value\": \"inactive\"\n    }\n  },\n  \"defrostingTemperatureSetting\": {\n    \"timestamp\": \"2020-12-21T15:48:04.887Z\",\n    \"data\": {\n      \"value\": {\n        \"celsius\": 21.2\n      }\n    }\n  },\n  \"hvacWeekdayStartingTimes\": [\n    {\n      \"timestamp\": \"2020-12-21T15:48:04.887Z\",\n      \"data\": {\n        \"value\": {\n          \"weekday\": \"monday\",\n          \"time\": {\n            \"hour\": 16,\n            \"minute\": 0\n          }\n        }\n      }\n    },\n    {\n      \"timestamp\": \"2020-12-21T15:48:04.887Z\",\n      \"data\": {\n        \"value\": {\n          \"weekday\": \"tuesday\",\n          \"time\": {\n            \"hour\": 16,\n            \"minute\": 0\n          }\n        }\n      }\n    },\n    {\n      \"timestamp\": \"2020-12-21T15:48:04.887Z\",\n      \"data\": {\n        \"value\": {\n          \"weekday\": \"wednesday\",\n          \"time\": {\n            \"hour\": 16,\n            \"minute\": 0\n          }\n        }\n      }\n    },\n    {\n      \"timestamp\": \"2020-12-21T15:48:04.887Z\",\n      \"data\": {\n        \"value\": {\n          \"weekday\": \"thursday\",\n          \"time\": {\n            \"hour\": 16,\n            \"minute\": 0\n          }\n        }\n      }\n    },\n    {\n      \"timestamp\": \"2020-12-21T15:48:04.887Z\",\n      \"data\": {\n        \"value\": {\n          \"weekday\": \"friday\",\n          \"time\": {\n            \"hour\": 16,\n            \"minute\": 0\n          }\n        }\n      }\n    },\n    {\n      \"timestamp\": \"2020-12-21T15:48:04.887Z\",\n      \"data\": {\n        \"value\": {\n          \"weekday\": \"saturday\",\n          \"time\": {\n            \"hour\": 18,\n            \"minute\": 30\n          }\n        }\n      }\n    },\n    {\n      \"timestamp\": \"2020-12-21T15:48:04.887Z\",\n      \"data\": {\n        \"value\": {\n          \"weekday\": \"sunday\",\n          \"time\": {\n            \"hour\": 19,\n            \"minute\": 31\n          }\n        }\n      }\n    },\n    {\n      \"timestamp\": \"2020-12-21T15:48:04.887Z\",\n      \"data\": {\n        \"value\": {\n          \"weekday\": \"automatic\",\n          \"time\": {\n            \"hour\": 16,\n            \"minute\": 0\n          }\n        }\n      }\n    }\n  ],\n  \"rearTemperatureSetting\": {\n    \"timestamp\": \"2020-12-21T15:48:04.887Z\",\n    \"data\": {\n      \"value\": {\n        \"celsius\": 21.6\n      }\n    }\n  }\n}\n```"
    -
        title: 'getAvailability([, propertyNames])'
        id: get-availability
        children:
            -
                declaration: "```javascript\nhmkit.commands.Climate.getAvailability()\n```"
                parameters:
                    propertyNames: '(optional) Array of names of the properties you want returned.'
                example: "```javascript\n// Get availability for all properties\nhmkit.telematics.sendCommand(\n  hmkit.commands.Climate.getAvailability(),\n  accessCertificate\n);\n// Get availability for specific properties\nhmkit.telematics.sendCommand(\n  hmkit.commands.Climate.getAvailability(['inside_temperature']),\n  accessCertificate\n);\n```"
            -
                id: availability-response
                title: Response
                parameters:
                    availability:
                        updateRate.value: '(String) enum'
                        rateLimit.value: (Number)
                        rateLimit.unit: (String)
                        appliesPer.value: (String)
                discussion: 'The response contains an availability object for each property, as shown in the example'
                example: "```json\n{\n  \"inside_temperature\": {\n    \"availability\": {\n      \"updateRate\": {\n        \"value\": \"trip_high\"\n      },\n      \"rateLimit\": {\n        \"value\": 64,\n        \"unit\": \"hertz\"\n      },\n      \"appliesPer\": {\n        \"value\": \"vehicle\"\n      }\n    }\n  }\n}\n```"
    -
        id: changeStartingTimes
        title: 'changeStartingTimes({ hvacWeekdayStartingTimes })'
        parameters:
            hvacWeekdayStartingTimes: '(Array<Object>) '
        example: "```javascript\nhmkit.telematics.sendCommand(\n  hmkit.commands.Climate.changeStartingTimes({\n    \"hvacWeekdayStartingTimes\": [\n      {\n        \"weekday\": \"monday\",\n        \"time\": {\n          \"hour\": 16,\n          \"minute\": 0\n        }\n      },\n      {\n        \"weekday\": \"tuesday\",\n        \"time\": {\n          \"hour\": 16,\n          \"minute\": 0\n        }\n      },\n      {\n        \"weekday\": \"wednesday\",\n        \"time\": {\n          \"hour\": 16,\n          \"minute\": 0\n        }\n      },\n      {\n        \"weekday\": \"thursday\",\n        \"time\": {\n          \"hour\": 16,\n          \"minute\": 0\n        }\n      },\n      {\n        \"weekday\": \"friday\",\n        \"time\": {\n          \"hour\": 16,\n          \"minute\": 0\n        }\n      },\n      {\n        \"weekday\": \"saturday\",\n        \"time\": {\n          \"hour\": 18,\n          \"minute\": 30\n        }\n      },\n      {\n        \"weekday\": \"sunday\",\n        \"time\": {\n          \"hour\": 19,\n          \"minute\": 31\n        }\n      },\n      {\n        \"weekday\": \"automatic\",\n        \"time\": {\n          \"hour\": 16,\n          \"minute\": 0\n        }\n      }\n    ]\n  }),\n  accessCertificate\n);\n```"
    -
        id: startStopHvac
        title: 'startStopHvac({ hvacState })'
        parameters:
            hvacState: '(String) (enum) '
        example: "```javascript\nhmkit.telematics.sendCommand(\n  hmkit.commands.Climate.startStopHvac({\n    \"hvacState\": \"active\"\n  }),\n  accessCertificate\n);\n```"
    -
        id: startStopDefogging
        title: 'startStopDefogging({ defoggingState })'
        parameters:
            defoggingState: '(String) (enum) '
        example: "```javascript\nhmkit.telematics.sendCommand(\n  hmkit.commands.Climate.startStopDefogging({\n    \"defoggingState\": \"inactive\"\n  }),\n  accessCertificate\n);\n```"
    -
        id: startStopDefrosting
        title: 'startStopDefrosting({ defrostingState })'
        parameters:
            defrostingState: '(String) (enum) '
        example: "```javascript\nhmkit.telematics.sendCommand(\n  hmkit.commands.Climate.startStopDefrosting({\n    \"defrostingState\": \"inactive\"\n  }),\n  accessCertificate\n);\n```"
    -
        id: startStopIonising
        title: 'startStopIonising({ ionisingState })'
        parameters:
            ionisingState: '(String) (enum) '
        example: "```javascript\nhmkit.telematics.sendCommand(\n  hmkit.commands.Climate.startStopIonising({\n    \"ionisingState\": \"inactive\"\n  }),\n  accessCertificate\n);\n```"
    -
        id: setTemperatureSettings
        title: 'setTemperatureSettings({ driverTemperatureSetting, passengerTemperatureSetting, rearTemperatureSetting })'
        parameters:
            driverTemperatureSetting: '(Number) (temperature) The driver temperature setting'
            passengerTemperatureSetting: '(Number) (temperature) The passenger temperature setting'
            rearTemperatureSetting: '(Number) (temperature) The rear temperature'
        example: "```javascript\nhmkit.telematics.sendCommand(\n  hmkit.commands.Climate.setTemperatureSettings({\n    \"driverTemperatureSetting\": {\n      \"celsius\": 21.5\n    },\n    \"passengerTemperatureSetting\": {\n      \"celsius\": 21.7\n    },\n    \"rearTemperatureSetting\": {\n      \"celsius\": 21.6\n    }\n  }),\n  accessCertificate\n);\n```"
