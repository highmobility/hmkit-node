title: Diagnostics
content:
    -
        title: 'getState([, propertyNames])'
        id: getState
        children:
            -
                declaration: "```javascript\nhmkit.commands.Diagnostics.getState()\n```"
                parameters:
                    propertyNames: '(optional) Array of names of the properties you want returned.'
                returns: DiagnosticsResponse
                example: "```javascript\nhmkit.telematics.sendCommand(\n  hmkit.commands.Diagnostics.getState(),\n  accessCertificate\n);\n```"
            -
                id: DiagnosticsResponse
                title: DiagnosticsResponse
                parameters:
                    adBlueLevel:
                        data.value: '(Number) (double) AdBlue level percentage between 0.0-1.0'
                        timestamp: (Date)
                    antiLockBraking:
                        data.value: '(String) (enum) '
                        timestamp: (Date)
                    backupBatteryRemainingTime:
                        data.value: '(Number) (duration) Remaining time the backup battery can work.'
                        timestamp: (Date)
                    batteryLevel:
                        data.value: '(Number) (double) Battery level in %&comma; value between 0.0 and 1.0'
                        timestamp: (Date)
                    batteryVoltage:
                        data.value: '(Number) (electric_potential_difference) Battery voltage'
                        timestamp: (Date)
                    brakeFluidLevel:
                        data.value: '(String) (enum) '
                        timestamp: (Date)
                    brakeLiningWearPreWarning:
                        data.value: '(String) (enum) Status of brake lining wear pre-warning'
                        timestamp: (Date)
                    checkControlMessages:
                        data.value: '(Array<Object>) '
                        timestamp: (Date)
                    confirmedTroubleCodes:
                        data.value: '(Array<Object>) '
                        timestamp: (Date)
                    dieselExhaustFilterStatus:
                        data.value: '(Array<Object>) '
                        timestamp: (Date)
                    dieselExhaustFluidRange:
                        data.value: '(Number) (length) Distance remaining until diesel exhaust fluid is empty'
                        timestamp: (Date)
                    dieselParticulateFilterSootLevel:
                        data.value: '(Number) (double) Level of soot in diesel exhaust particulate filter'
                        timestamp: (Date)
                    distanceSinceReset:
                        data.value: '(Number) (length) The distance driven since reset'
                        timestamp: (Date)
                    distanceSinceStart:
                        data.value: '(Number) (length) The distance driven since trip start'
                        timestamp: (Date)
                    engineCoolantFluidLevel:
                        data.value: '(String) (enum) Engine coolant fluid level'
                        timestamp: (Date)
                    engineCoolantTemperature:
                        data.value: '(Number) (temperature) Engine coolant temperature'
                        timestamp: (Date)
                    engineLoad:
                        data.value: '(Number) (double) Current engine load percentage between 0.0-1.0'
                        timestamp: (Date)
                    engineOilAmount:
                        data.value: '(Number) (volume) The current estimated oil tank liquid fill.'
                        timestamp: (Date)
                    engineOilFluidLevel:
                        data.value: '(String) (enum) Engine oil fluid level'
                        timestamp: (Date)
                    engineOilLevel:
                        data.value: '(Number) (double) The current estimated oil tank liquid fill in percentage.'
                        timestamp: (Date)
                    engineOilLifeRemaining:
                        data.value: '(Number) (double) Remaining life of engine oil which decreases over time'
                        timestamp: (Date)
                    engineOilPressureLevel:
                        data.value: '(String) (enum) Engine oil pressure level'
                        timestamp: (Date)
                    engineOilServiceStatus:
                        data.value: '(String) (enum) Engine oil service status'
                        timestamp: (Date)
                    engineOilTemperature:
                        data.value: '(Number) (temperature) Engine oil temperature'
                        timestamp: (Date)
                    engineRPM:
                        data.value: '(Number) (angular_velocity) Engine RPM (revolutions per minute)'
                        timestamp: (Date)
                    engineTimeToNextService:
                        data.value: '(Number) (duration) Engine time until next service of the vehicle'
                        timestamp: (Date)
                    engineTorque:
                        data.value: '(Number) (double) Current engine torque percentage between 0.0-1.0'
                        timestamp: (Date)
                    engineTotalFuelConsumption:
                        data.value: '(Number) (volume) The accumulated lifespan fuel consumption'
                        timestamp: (Date)
                    engineTotalIdleOperatingTime:
                        data.value: '(Number) (duration) The accumulated time of engine operation'
                        timestamp: (Date)
                    engineTotalOperatingTime:
                        data.value: '(Number) (duration) The accumulated time of engine operation'
                        timestamp: (Date)
                    estimatedRange:
                        data.value: '(Number) (length) Estimated range (with combustion engine)'
                        timestamp: (Date)
                    estimatedSecondaryPowertrainRange:
                        data.value: '(Number) (length) Estimated secondary powertrain range'
                        timestamp: (Date)
                    fuelLevel:
                        data.value: '(Number) (double) Fuel level percentage between 0.0-1.0'
                        timestamp: (Date)
                    fuelLevelAccuracy:
                        data.value: '(String) (enum) This value includes the information&comma; if the fuel level has been calculated or measured.'
                        timestamp: (Date)
                    fuelVolume:
                        data.value: '(Number) (volume) The fuel volume measured in liters'
                        timestamp: (Date)
                    lowVoltageBatteryChargeLevel:
                        data.value: '(String) (enum) Indicates if the charge level of the low voltage battery is too low to use other systems'
                        timestamp: (Date)
                    odometer:
                        data.value: '(Number) (length) The vehicle odometer value in a given units'
                        timestamp: (Date)
                    oemTroubleCodeValues:
                        data.value: '(Array<Object>) Additional OEM trouble codes'
                        timestamp: (Date)
                    passengerAirbagStatus:
                        data.value: '(String) (enum) Passenger airbag is activated or not'
                        timestamp: (Date)
                    speed:
                        data.value: '(Number) (speed) The vehicle speed'
                        timestamp: (Date)
                    tirePressures:
                        data.value: '(Array<Object>) '
                        timestamp: (Date)
                    tirePressuresDifferences:
                        data.value: '(Array<Object>) Tire pressures difference from the target pressure.'
                        timestamp: (Date)
                    tirePressuresTargets:
                        data.value: '(Array<Object>) Target tire pressures for the vehicle.'
                        timestamp: (Date)
                    tirePressureStatuses:
                        data.value: '(Array<Object>) '
                        timestamp: (Date)
                    tireTemperatures:
                        data.value: '(Array<Object>) '
                        timestamp: (Date)
                    troubleCodes:
                        data.value: '(Array<Object>) '
                        timestamp: (Date)
                    washerFluidLevel:
                        data.value: '(String) (enum) '
                        timestamp: (Date)
                    wheelBasedSpeed:
                        data.value: '(Number) (speed) The vehicle speed measured at the wheel base'
                        timestamp: (Date)
                    wheelRPMs:
                        data.value: '(Array<Object>) '
                        timestamp: (Date)
                example: "```json\n{\n  \"engineOilTemperature\": {\n    \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n    \"data\": {\n      \"value\": 99.5,\n      \"unit\": \"celsius\"\n    }\n  },\n  \"speed\": {\n    \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n    \"data\": {\n      \"value\": 60,\n      \"unit\": \"kilometers_per_hour\"\n    }\n  },\n  \"engineRPM\": {\n    \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n    \"data\": {\n      \"value\": 2500,\n      \"unit\": \"revolutions_per_minute\"\n    }\n  },\n  \"fuelLevel\": {\n    \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n    \"data\": {\n      \"value\": 0.9\n    }\n  },\n  \"estimatedRange\": {\n    \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n    \"data\": {\n      \"value\": 265,\n      \"unit\": \"kilometers\"\n    }\n  },\n  \"washerFluidLevel\": {\n    \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n    \"data\": {\n      \"value\": \"filled\"\n    }\n  },\n  \"batteryVoltage\": {\n    \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n    \"data\": {\n      \"value\": 12.1,\n      \"unit\": \"volts\"\n    }\n  },\n  \"adBlueLevel\": {\n    \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n    \"data\": {\n      \"value\": 0.9\n    }\n  },\n  \"distanceSinceReset\": {\n    \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n    \"data\": {\n      \"value\": 1500.1,\n      \"unit\": \"kilometers\"\n    }\n  },\n  \"distanceSinceStart\": {\n    \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n    \"data\": {\n      \"value\": 12.4,\n      \"unit\": \"kilometers\"\n    }\n  },\n  \"fuelVolume\": {\n    \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n    \"data\": {\n      \"value\": 35.5,\n      \"unit\": \"liters\"\n    }\n  },\n  \"antiLockBraking\": {\n    \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n    \"data\": {\n      \"value\": \"active\"\n    }\n  },\n  \"engineCoolantTemperature\": {\n    \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n    \"data\": {\n      \"value\": 20,\n      \"unit\": \"celsius\"\n    }\n  },\n  \"engineTotalFuelConsumption\": {\n    \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n    \"data\": {\n      \"value\": 27587,\n      \"unit\": \"liters\"\n    }\n  },\n  \"brakeFluidLevel\": {\n    \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n    \"data\": {\n      \"value\": \"low\"\n    }\n  },\n  \"engineTorque\": {\n    \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n    \"data\": {\n      \"value\": 0.2\n    }\n  },\n  \"engineLoad\": {\n    \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n    \"data\": {\n      \"value\": 0.1\n    }\n  },\n  \"wheelBasedSpeed\": {\n    \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n    \"data\": {\n      \"value\": 65,\n      \"unit\": \"kilometers_per_hour\"\n    }\n  },\n  \"batteryLevel\": {\n    \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n    \"data\": {\n      \"value\": 0.56\n    }\n  },\n  \"checkControlMessages\": [\n    {\n      \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n      \"data\": {\n        \"ID\": {\n          \"value\": 1\n        },\n        \"remainingTime\": {\n          \"value\": 105592,\n          \"unit\": \"minutes\"\n        },\n        \"text\": {\n          \"value\": \"Check engine\"\n        },\n        \"status\": {\n          \"value\": \"Alert\"\n        }\n      }\n    }\n  ],\n  \"tirePressures\": [\n    {\n      \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n      \"data\": {\n        \"location\": {\n          \"value\": \"front_left\"\n        },\n        \"pressure\": {\n          \"value\": 2.31,\n          \"unit\": \"bars\"\n        }\n      }\n    },\n    {\n      \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n      \"data\": {\n        \"location\": {\n          \"value\": \"front_right\"\n        },\n        \"pressure\": {\n          \"value\": 2.31,\n          \"unit\": \"bars\"\n        }\n      }\n    },\n    {\n      \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n      \"data\": {\n        \"location\": {\n          \"value\": \"rear_right\"\n        },\n        \"pressure\": {\n          \"value\": 2.24,\n          \"unit\": \"bars\"\n        }\n      }\n    },\n    {\n      \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n      \"data\": {\n        \"location\": {\n          \"value\": \"rear_left\"\n        },\n        \"pressure\": {\n          \"value\": 2.24,\n          \"unit\": \"bars\"\n        }\n      }\n    },\n    {\n      \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n      \"data\": {\n        \"location\": {\n          \"value\": \"rear_right_outer\"\n        },\n        \"pressure\": {\n          \"value\": 2.25,\n          \"unit\": \"bars\"\n        }\n      }\n    },\n    {\n      \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n      \"data\": {\n        \"location\": {\n          \"value\": \"rear_left_outer\"\n        },\n        \"pressure\": {\n          \"value\": 2.25,\n          \"unit\": \"bars\"\n        }\n      }\n    },\n    {\n      \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n      \"data\": {\n        \"location\": {\n          \"value\": \"spare\"\n        },\n        \"pressure\": {\n          \"value\": 2.25,\n          \"unit\": \"bars\"\n        }\n      }\n    }\n  ],\n  \"tireTemperatures\": [\n    {\n      \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n      \"data\": {\n        \"location\": {\n          \"value\": \"front_left\"\n        },\n        \"temperature\": {\n          \"value\": 40.1,\n          \"unit\": \"celsius\"\n        }\n      }\n    },\n    {\n      \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n      \"data\": {\n        \"location\": {\n          \"value\": \"front_right\"\n        },\n        \"temperature\": {\n          \"value\": 40.2,\n          \"unit\": \"celsius\"\n        }\n      }\n    },\n    {\n      \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n      \"data\": {\n        \"location\": {\n          \"value\": \"rear_right\"\n        },\n        \"temperature\": {\n          \"value\": 40.3,\n          \"unit\": \"celsius\"\n        }\n      }\n    },\n    {\n      \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n      \"data\": {\n        \"location\": {\n          \"value\": \"rear_left\"\n        },\n        \"temperature\": {\n          \"value\": 40.4,\n          \"unit\": \"celsius\"\n        }\n      }\n    },\n    {\n      \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n      \"data\": {\n        \"location\": {\n          \"value\": \"rear_right_outer\"\n        },\n        \"temperature\": {\n          \"value\": 40.5,\n          \"unit\": \"celsius\"\n        }\n      }\n    },\n    {\n      \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n      \"data\": {\n        \"location\": {\n          \"value\": \"rear_left_outer\"\n        },\n        \"temperature\": {\n          \"value\": 40.6,\n          \"unit\": \"celsius\"\n        }\n      }\n    },\n    {\n      \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n      \"data\": {\n        \"location\": {\n          \"value\": \"spare\"\n        },\n        \"temperature\": {\n          \"value\": 10.2,\n          \"unit\": \"celsius\"\n        }\n      }\n    }\n  ],\n  \"wheelRPMs\": [\n    {\n      \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n      \"data\": {\n        \"location\": {\n          \"value\": \"front_left\"\n        },\n        \"RPM\": {\n          \"value\": 737,\n          \"unit\": \"revolutions_per_minute\"\n        }\n      }\n    },\n    {\n      \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n      \"data\": {\n        \"location\": {\n          \"value\": \"front_right\"\n        },\n        \"RPM\": {\n          \"value\": 747,\n          \"unit\": \"revolutions_per_minute\"\n        }\n      }\n    },\n    {\n      \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n      \"data\": {\n        \"location\": {\n          \"value\": \"rear_right\"\n        },\n        \"RPM\": {\n          \"value\": 777,\n          \"unit\": \"revolutions_per_minute\"\n        }\n      }\n    },\n    {\n      \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n      \"data\": {\n        \"location\": {\n          \"value\": \"rear_left\"\n        },\n        \"RPM\": {\n          \"value\": 787,\n          \"unit\": \"revolutions_per_minute\"\n        }\n      }\n    },\n    {\n      \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n      \"data\": {\n        \"location\": {\n          \"value\": \"rear_right_outer\"\n        },\n        \"RPM\": {\n          \"value\": 797,\n          \"unit\": \"revolutions_per_minute\"\n        }\n      }\n    },\n    {\n      \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n      \"data\": {\n        \"location\": {\n          \"value\": \"rear_left_outer\"\n        },\n        \"RPM\": {\n          \"value\": 807,\n          \"unit\": \"revolutions_per_minute\"\n        }\n      }\n    },\n    {\n      \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n      \"data\": {\n        \"location\": {\n          \"value\": \"spare\"\n        },\n        \"RPM\": {\n          \"value\": 0,\n          \"unit\": \"revolutions_per_minute\"\n        }\n      }\n    }\n  ],\n  \"troubleCodes\": [\n    {\n      \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n      \"data\": {\n        \"occurrences\": {\n          \"value\": 2\n        },\n        \"ID\": {\n          \"value\": \"C1116FA\"\n        },\n        \"ecuID\": {\n          \"value\": \"RDU_212FR\"\n        },\n        \"status\": {\n          \"value\": \"PENDING\"\n        },\n        \"system\": {\n          \"value\": \"unknown\"\n        }\n      }\n    },\n    {\n      \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n      \"data\": {\n        \"occurrences\": {\n          \"value\": 2\n        },\n        \"ID\": {\n          \"value\": \"C163AFA\"\n        },\n        \"ecuID\": {\n          \"value\": \"DTR212\"\n        },\n        \"status\": {\n          \"value\": \"PENDING\"\n        },\n        \"system\": {\n          \"value\": \"body\"\n        }\n      }\n    }\n  ],\n  \"odometer\": {\n    \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n    \"data\": {\n      \"value\": 2050,\n      \"unit\": \"kilometers\"\n    }\n  },\n  \"engineTotalOperatingTime\": {\n    \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n    \"data\": {\n      \"value\": 1500.65,\n      \"unit\": \"hours\"\n    }\n  },\n  \"tirePressureStatuses\": [\n    {\n      \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n      \"data\": {\n        \"location\": {\n          \"value\": \"front_left\"\n        },\n        \"status\": {\n          \"value\": \"normal\"\n        }\n      }\n    },\n    {\n      \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n      \"data\": {\n        \"location\": {\n          \"value\": \"front_right\"\n        },\n        \"status\": {\n          \"value\": \"low\"\n        }\n      }\n    },\n    {\n      \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n      \"data\": {\n        \"location\": {\n          \"value\": \"rear_right\"\n        },\n        \"status\": {\n          \"value\": \"alert\"\n        }\n      }\n    },\n    {\n      \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n      \"data\": {\n        \"location\": {\n          \"value\": \"rear_left\"\n        },\n        \"status\": {\n          \"value\": \"normal\"\n        }\n      }\n    },\n    {\n      \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n      \"data\": {\n        \"location\": {\n          \"value\": \"rear_right_outer\"\n        },\n        \"status\": {\n          \"value\": \"normal\"\n        }\n      }\n    },\n    {\n      \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n      \"data\": {\n        \"location\": {\n          \"value\": \"rear_left_outer\"\n        },\n        \"status\": {\n          \"value\": \"normal\"\n        }\n      }\n    },\n    {\n      \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n      \"data\": {\n        \"location\": {\n          \"value\": \"spare\"\n        },\n        \"status\": {\n          \"value\": \"normal\"\n        }\n      }\n    }\n  ],\n  \"brakeLiningWearPreWarning\": {\n    \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n    \"data\": {\n      \"value\": \"inactive\"\n    }\n  },\n  \"engineOilLifeRemaining\": {\n    \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n    \"data\": {\n      \"value\": 0.88\n    }\n  },\n  \"oemTroubleCodeValues\": [\n    {\n      \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n      \"data\": {\n        \"ID\": {\n          \"value\": \"123ID\"\n        },\n        \"keyValue\": {\n          \"key\": {\n            \"value\": \"some_error\"\n          },\n          \"value\": {\n            \"value\": \"some_value\"\n          }\n        }\n      }\n    },\n    {\n      \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n      \"data\": {\n        \"ID\": {\n          \"value\": \"1B3C\"\n        },\n        \"keyValue\": {\n          \"key\": {\n            \"value\": \"important_error\"\n          },\n          \"value\": {\n            \"value\": \"system fault 32\"\n          }\n        }\n      }\n    }\n  ],\n  \"dieselExhaustFluidRange\": {\n    \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n    \"data\": {\n      \"value\": 2233,\n      \"unit\": \"kilometers\"\n    }\n  },\n  \"dieselParticulateFilterSootLevel\": {\n    \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n    \"data\": {\n      \"value\": 0.16\n    }\n  },\n  \"confirmedTroubleCodes\": [\n    {\n      \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n      \"data\": {\n        \"ID\": {\n          \"value\": \"801C10\"\n        },\n        \"ecuAddress\": {\n          \"value\": \"16\"\n        },\n        \"ecuVariantName\": {\n          \"value\": \"CAS\"\n        },\n        \"status\": {\n          \"value\": \"ACTIVE\"\n        }\n      }\n    },\n    {\n      \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n      \"data\": {\n        \"ID\": {\n          \"value\": \"D52C44\"\n        },\n        \"ecuAddress\": {\n          \"value\": \"48\"\n        },\n        \"ecuVariantName\": {\n          \"value\": \"CAS\"\n        },\n        \"status\": {\n          \"value\": \"ACTIVE\"\n        }\n      }\n    }\n  ],\n  \"dieselExhaustFilterStatus\": [\n    {\n      \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n      \"data\": {\n        \"status\": {\n          \"value\": \"unknown\"\n        },\n        \"component\": {\n          \"value\": \"exhaust_filter\"\n        },\n        \"cleaning\": {\n          \"value\": \"unknown\"\n        }\n      }\n    },\n    {\n      \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n      \"data\": {\n        \"status\": {\n          \"value\": \"normal_operation\"\n        },\n        \"component\": {\n          \"value\": \"exhaust_filter\"\n        },\n        \"cleaning\": {\n          \"value\": \"unknown\"\n        }\n      }\n    },\n    {\n      \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n      \"data\": {\n        \"status\": {\n          \"value\": \"overloaded\"\n        },\n        \"component\": {\n          \"value\": \"exhaust_filter\"\n        },\n        \"cleaning\": {\n          \"value\": \"unknown\"\n        }\n      }\n    },\n    {\n      \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n      \"data\": {\n        \"status\": {\n          \"value\": \"at_limit\"\n        },\n        \"component\": {\n          \"value\": \"exhaust_filter\"\n        },\n        \"cleaning\": {\n          \"value\": \"unknown\"\n        }\n      }\n    },\n    {\n      \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n      \"data\": {\n        \"status\": {\n          \"value\": \"over_limit\"\n        },\n        \"component\": {\n          \"value\": \"exhaust_filter\"\n        },\n        \"cleaning\": {\n          \"value\": \"unknown\"\n        }\n      }\n    }\n  ],\n  \"engineTotalIdleOperatingTime\": {\n    \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n    \"data\": {\n      \"value\": 213.56,\n      \"unit\": \"hours\"\n    }\n  },\n  \"engineOilAmount\": {\n    \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n    \"data\": {\n      \"value\": 3.5,\n      \"unit\": \"liters\"\n    }\n  },\n  \"engineOilLevel\": {\n    \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n    \"data\": {\n      \"value\": 0.8\n    }\n  },\n  \"estimatedSecondaryPowertrainRange\": {\n    \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n    \"data\": {\n      \"value\": 265,\n      \"unit\": \"kilometers\"\n    }\n  },\n  \"fuelLevelAccuracy\": {\n    \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n    \"data\": {\n      \"value\": \"measured\"\n    }\n  },\n  \"tirePressuresTargets\": [\n    {\n      \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n      \"data\": {\n        \"location\": {\n          \"value\": \"front_left\"\n        },\n        \"pressure\": {\n          \"value\": 2.31,\n          \"unit\": \"bars\"\n        }\n      }\n    },\n    {\n      \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n      \"data\": {\n        \"location\": {\n          \"value\": \"front_right\"\n        },\n        \"pressure\": {\n          \"value\": 2.31,\n          \"unit\": \"bars\"\n        }\n      }\n    },\n    {\n      \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n      \"data\": {\n        \"location\": {\n          \"value\": \"rear_right\"\n        },\n        \"pressure\": {\n          \"value\": 2.24,\n          \"unit\": \"bars\"\n        }\n      }\n    },\n    {\n      \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n      \"data\": {\n        \"location\": {\n          \"value\": \"rear_left\"\n        },\n        \"pressure\": {\n          \"value\": 2.24,\n          \"unit\": \"bars\"\n        }\n      }\n    },\n    {\n      \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n      \"data\": {\n        \"location\": {\n          \"value\": \"rear_right_outer\"\n        },\n        \"pressure\": {\n          \"value\": 2.25,\n          \"unit\": \"bars\"\n        }\n      }\n    },\n    {\n      \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n      \"data\": {\n        \"location\": {\n          \"value\": \"rear_left_outer\"\n        },\n        \"pressure\": {\n          \"value\": 2.25,\n          \"unit\": \"bars\"\n        }\n      }\n    },\n    {\n      \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n      \"data\": {\n        \"location\": {\n          \"value\": \"spare\"\n        },\n        \"pressure\": {\n          \"value\": 2.25,\n          \"unit\": \"bars\"\n        }\n      }\n    }\n  ],\n  \"tirePressuresDifferences\": [\n    {\n      \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n      \"data\": {\n        \"location\": {\n          \"value\": \"front_left\"\n        },\n        \"pressure\": {\n          \"value\": 0.1,\n          \"unit\": \"bars\"\n        }\n      }\n    },\n    {\n      \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n      \"data\": {\n        \"location\": {\n          \"value\": \"front_right\"\n        },\n        \"pressure\": {\n          \"value\": 0.1,\n          \"unit\": \"bars\"\n        }\n      }\n    },\n    {\n      \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n      \"data\": {\n        \"location\": {\n          \"value\": \"rear_right\"\n        },\n        \"pressure\": {\n          \"value\": 0.1,\n          \"unit\": \"bars\"\n        }\n      }\n    },\n    {\n      \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n      \"data\": {\n        \"location\": {\n          \"value\": \"rear_left\"\n        },\n        \"pressure\": {\n          \"value\": 0.1,\n          \"unit\": \"bars\"\n        }\n      }\n    },\n    {\n      \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n      \"data\": {\n        \"location\": {\n          \"value\": \"rear_right_outer\"\n        },\n        \"pressure\": {\n          \"value\": 0.1,\n          \"unit\": \"bars\"\n        }\n      }\n    },\n    {\n      \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n      \"data\": {\n        \"location\": {\n          \"value\": \"rear_left_outer\"\n        },\n        \"pressure\": {\n          \"value\": 0.1,\n          \"unit\": \"bars\"\n        }\n      }\n    },\n    {\n      \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n      \"data\": {\n        \"location\": {\n          \"value\": \"spare\"\n        },\n        \"pressure\": {\n          \"value\": 0.1,\n          \"unit\": \"bars\"\n        }\n      }\n    }\n  ],\n  \"backupBatteryRemainingTime\": {\n    \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n    \"data\": {\n      \"value\": 15,\n      \"unit\": \"minutes\"\n    }\n  },\n  \"engineCoolantFluidLevel\": {\n    \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n    \"data\": {\n      \"value\": \"high\"\n    }\n  },\n  \"engineOilFluidLevel\": {\n    \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n    \"data\": {\n      \"value\": \"normal\"\n    }\n  },\n  \"engineOilPressureLevel\": {\n    \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n    \"data\": {\n      \"value\": \"normal\"\n    }\n  },\n  \"engineTimeToNextService\": {\n    \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n    \"data\": {\n      \"value\": 501,\n      \"unit\": \"hours\"\n    }\n  },\n  \"lowVoltageBatteryChargeLevel\": {\n    \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n    \"data\": {\n      \"value\": \"ok\"\n    }\n  },\n  \"engineOilServiceStatus\": {\n    \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n    \"data\": {\n      \"value\": \"ok\"\n    }\n  },\n  \"passengerAirbagStatus\": {\n    \"timestamp\": \"2021-06-01T15:48:04.887Z\",\n    \"data\": {\n      \"value\": \"active\"\n    }\n  }\n}\n```"
    -
        title: 'getAvailability([, propertyNames])'
        id: get-availability
        children:
            -
                declaration: "```javascript\nhmkit.commands.Diagnostics.getAvailability()\n```"
                parameters:
                    propertyNames: '(optional) Array of names of the properties you want returned.'
                example: "```javascript\n// Get availability for all properties\nhmkit.telematics.sendCommand(\n  hmkit.commands.Diagnostics.getAvailability(),\n  accessCertificate\n);\n// Get availability for specific properties\nhmkit.telematics.sendCommand(\n  hmkit.commands.Diagnostics.getAvailability(['engineOilTemperature']),\n  accessCertificate\n);\n```"
            -
                id: availability-response
                title: Response
                parameters:
                    availability:
                        updateRate.value: '(String) enum'
                        rateLimit.value: (Number)
                        rateLimit.unit: (String)
                        appliesPer.value: (String)
                discussion: 'The response contains an availability object for each property, as shown in the example'
                example: "```json\n{\n  \"engineOilTemperature\": {\n    \"availability\": {\n      \"updateRate\": {\n        \"value\": \"trip_high\"\n      },\n      \"rateLimit\": {\n        \"value\": 64,\n        \"unit\": \"hertz\"\n      },\n      \"appliesPer\": {\n        \"value\": \"vehicle\"\n      }\n    }\n  }\n}\n```"
